# OpenXC Android Library Changelog

## v5.3.2

* Be less strict about incoming JSON messages (allow whitespace).

## v5.3.1

* Improve reliability of automatic Bluetooth device detection and decrease the
  impact on battery life.
* Listen for Bluetooth VIs that initiate a new connection to avoid polling.
  Uncheck the "use polling" option in the Enabler if you have a new Ford
  Reference VI with a big "OpenXC" sticker on it, as this version is capable of
  initiating the Bluetooth connection on wakeup.

## v5.3

* Automatically discover, initiate pairing and connect to Bluetooth-enabled
  OpenXC vehicle interfaces.

## v5.2

* Support Android API level 19.
* Fix timestamps in trace files - support different locales and restore
  fractional parts.
* Add option to automatically connect to paired OpenXC-VI-* Bluetooth device.
* Merge Vehicle Dashboard example into Enabler.
* Simplified Enabler view - less debug information.
* Fix display of Android location data in dashboard for comparison.

## v5.1.1

* Fix lifecycle issues with VehicleService from Enabler app.
* Fix Bluetooth data sources in Android API 10-13 and below (2.3.x).
* Fix selecting a trace file for playback in Android API 10-13 (2.3.x).

## v5.1

* Run OpenXC VehicleService in the foreground (including an Android
  notification) when connected to a vehicle interface.
* Fix possible concurrency problems with USB, Bluetooth and network vehicle
  interface sources.
* Fix UI blocking when changing network vehicle interface URL.
* Decode binary output from a vehicle interface (experimental)
* Display app version in an 'About' page in Enabler.
* Re-styled Enabler to better fit on small screens.
* Update a few dependencies, leading lower CPU overhead in normal operation.

## v5.0.0

* Add OpenXC icon to Enabler
* Don't send timestamps with commands to the vehicle.
* BREAKING CHANGE: Store timestamps as milliseconds in Java code, and as
  seconds (with fractions) in serialized measurements (#47 at GitHub)

## v4.0.3

* Building with Android API level 18
* Fix possible deadlock in network data source

## v4.0.2

* Fix build with Eclipse and the latest version of Maven plugins.
* Increase logging verbosity for debugging VehicleDataSinks.
* Split trips in trace file recorder based on data received, not just time.
* Protect against a race condition in the Bluetooth and Network interfaces.

## v4.0.1

* Fix a regression for Android 2.3 and 3.0/3.1 devices. Library and Enabler now
  work without USB support, as they should.

## v4.0

* BREAKING CHANGE: Combine `Odometer` and `FineOdometer` into a
  single high-precision measurement, `Odometer`. There is no more
  `FineOdometer` measurement, but `Odometer` is a drop-in replacement.
* Bluetooth and file recording now more reliable - will remain running even if
  you leave the Enabler activity.
* Improved USB throughput by using larger bulk transfer sizes.

## v3.0

* Add support for network-based CAN translator (thanks Ewgenij Sokolovski and
  Robert Rembold)
* Push core physical vehicle interfaces back into the realm of the remote
  VehicleService process for performance and to accomodate a new API for writing
  back to the vehicle.
* Refactor message writing API - VehicleManager.set(VehicleMessage) is now
  send(VehicleMessage).
* Fix build error in Eclipse, hopefully once and for all.

## v2.1.2

* Duplicate messages are no longer received from USB data source.
* Infrequent messages are no longer lost by the USB data source.

## v2.1.1

* Fix build error in Eclipse.

## v2.1

* Raise minimum Android API version to 9 (2.3) to use newer data structures.
* Fix compatibility issue with Android 4.2.
* Bump platform build version to Android SDK version 17 (4.2).
* Significant performance improvements when parsing JSON and communicating
  between remote and in-app vehicle services.
* Continue to flush records in the UploaderSink even if the vehicle is
  disconnected.

## v2.0

* Test and verify Bluetooth data source.
* Add an option to the Enabler's settings menu to use a Bluetooth source.
* Change vehicle data trace file format to include timestamps as native JSON.
* Remove Maven support for Eclipse developers; library dependencies are now
  bundled in the repository.

## v1.3

* Greatly improve USB connection reliability.
* Refactored library internals to allow greater flexibility, including
  user-defined Measurement types, data sources and data sinks.

## v1.2

* Add OpenXC Enabler application to control VehicleService in a remote process.
  Starts service at bootup and allows sharing the service between multiple
  OpenXC applications.

## v1.1

* Measurement API changed, getValue() no longers throws an exception if data is
  unavailable. Instead, measurement objects will not be returned to the caller
  unless they have valid data.

## v1.0

* Initial release, USB CAN translator support.
